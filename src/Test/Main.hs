{-# LANGUAGE PackageImports #-}
{-# OPTIONS_GHC -Wall -Wwarn #-}
module Main where

import qualified Data.Map as Map
import qualified Data.Set as Set
import Data.Logic.Classes.Pred (Pred(pApp1, pApp2))
import Data.Logic.Classes.Term (Term(..))
import Data.Logic.KnowledgeBase (WithId(WithId, wiItem, wiIdent))
import Data.Logic.Normal.Implicative (ImplicativeForm(INF, neg, pos))
import Data.Logic.Resolution (SetOfSupport, prove)
import qualified Data.Set.Extra as S
import Data.Set (fromList)
import Ontology.Types (unsafeSubjectId, unsafeAssertionId)
import Ontology.Types.Formula (LiteralF, TermF)
import Ontology.Types.Formula.AtomicPredicate (AtomicPredicate(..))
import Ontology.Types.Formula.AtomicFunction (AtomicFunction(..))
import Ontology.Types.Formula.V (V(V))
import Prelude hiding (negate)
import System.Exit
import Test.HUnit

main :: IO ()
main =
    runTestTT prove1 >>= doCounts
    where
      doCounts counts' = exitWith (if errors counts' /= 0 || failures counts' /= 0 then ExitFailure 1 else ExitSuccess)
    

-- prove :: Literal lit term v p f => SetOfSupport lit v term -> SetOfSupport lit v term -> S.Set (ImplicativeForm lit) -> (Bool, SetOfSupport lit v term)

type Description = String

prove1 :: Test
prove1 =
    TestCase (assertEqual "Prover bug 1" expected1 (prove (Just 20) S.empty sos (S.map wiItem kb)))
    where
      x = var (V "x")
      s49 = pApp1 (Reference 1 (unsafeSubjectId 49))
      s51 = pApp2 (Reference 2 (unsafeSubjectId 51))
      s52 = pApp1 (Reference 1 (unsafeSubjectId 52))
      s54 = pApp1 (Reference 1 (unsafeSubjectId 54))
      s58 = pApp1 (Reference 1 (unsafeSubjectId 58))
      f53 = fApp (Function (Reference 3 (unsafeSubjectId 53)))
      a155 = pApp1 (AssertionRef (unsafeAssertionId 155))
      sk1 = fApp (Skolem 1)
      n1 = fApp (Function (NumberLit 1.0))
      n2 = fApp (Function (NumberLit 2.0))
      sos :: SetOfSupport (LiteralF String) V (TermF String)
      sos = Set.fromList [(INF {neg = Set.fromList [(s58 (x))],
                                pos = Set.fromList [(s58 (f53 [x,n1 []]))]},
                           Map.fromList [(V "x",x)])]

      kb :: S.Set (WithId (ImplicativeForm (LiteralF String)))
      kb = Set.fromList [WithId {wiItem = INF {neg = Set.fromList [],
                                               pos = Set.fromList [(s51 (sk1 [x]) (x))]},
                                 wiIdent = 1},
                         WithId {wiItem = INF {neg = Set.fromList [],
                                               pos = Set.fromList [(s52
                                                                    (f53 [sk1 [x], n2 []]))]},
                                 wiIdent = 1},
                         WithId {wiItem = INF {neg = Set.fromList [],
                                               pos = Set.fromList [(s52 (sk1 [x]))]},
                                 wiIdent = 1},
                         WithId {wiItem = INF {neg = Set.fromList [],
                                               pos = Set.fromList [(s58 (n1 []))]},
                                 wiIdent = 4},
                         WithId {wiItem = INF {neg = Set.fromList [(s49 (x))],
                                               pos = Set.fromList [(s54 (x))]},
                                 wiIdent = 3},
                         WithId {wiItem = INF {neg = Set.fromList [(s49 (x))],
                                               pos = Set.fromList [(a155 (x))]},
                                 wiIdent = 2},
                         WithId {wiItem = INF {neg = Set.fromList [(a155 (x))],
                                               pos = Set.fromList [(s49 (x))]},
                                 wiIdent = 2}]

expected1 :: (Bool, S.Set (ImplicativeForm (LiteralF String), Map.Map V (TermF String)))
expected1 = (False,fromList [(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (Reference 3 (unsafeSubjectId 53))) [fApp (Function (NumberLit 1.0)) [],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []],fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))]),(INF {neg = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (var (V "x")))], pos = fromList [(pApp1 (Reference 1 (unsafeSubjectId 58)) (fApp (Function (Reference 3 (unsafeSubjectId 53))) [var (V "x"),fApp (Function (NumberLit 1.0)) []]))]},Map.fromList [(V "x",var (V "x"))])])
