Name:             seereason-base
Version:          1.59
License:          BSD3
Author:           SeeReason Partners <partners@seereason.com>
Maintainer:       SeeReason Partners <partners@seereason.com>
Synopsis:         Seereason.com
Description:      Basic types for the seereason logic system
Build-Type:       Simple
Category:         Web, Language
Cabal-version:    >= 1.10

flag local-logic-classes
  Description: use local source for logic-classes
  Manual: True
  Default: False

Library
 Build-Depends:    acid-state, base, bytestring, containers, fgl, userid, happstack-authenticate < 2, happstack-scaffolding,
                   ixset, json, mtl >= 2, pretty, QuickCheck, safecopy, set-extra, stm, syb,
                   text, time, web-routes, web-routes-hsp, web-routes-th
 Hs-Source-Dirs: src
 -- Hs-Source-Dirs: src, ../logic-classes
 -- Build-Depends: applicative-extras, template-haskell
 GHC-options: -threaded -Wall -O2 -fwarn-tabs
 Exposed-Modules:  GenI.URL
                   JSON.Generic2
                   Ontology.Comment
                   Ontology.Extra
                   Ontology.Types
                   Ontology.Types.Assertion
                   Ontology.Types.Belief
                   Ontology.Types.Description
                   Ontology.Types.Document
                   Ontology.Types.DocumentId
                   Ontology.Types.Formula
                   Ontology.Types.Formula.AtomicFunction
                   Ontology.Types.Formula.AtomicPredicate
                   Ontology.Types.Formula.V
                   Ontology.Types.FunctionId
                   Ontology.Types.GenI
                   Ontology.Types.InsertMode
                   Ontology.Types.PF
                   Ontology.Types.PredForm
                   Ontology.Types.Subject
                   Ontology.Types.Theorem
                   Ontology.Types.UserData
                   Ontology.URL
                   Preferences.URL
                   URL
                   MkURL
                   Comment
                   CommentTypes
 if flag(local-logic-classes)
   Hs-Source-Dirs: ../logic-classes
   Build-Depends: applicative-extras, template-haskell, HUnit, PropLogic
   Exposed-Modules:
     Data.Logic
     Data.Logic.Classes.Apply
     Data.Logic.Classes.Arity
     Data.Logic.Classes.Atom
     Data.Logic.Classes.ClauseNormalForm
     Data.Logic.Classes.Combine
     Data.Logic.Classes.Constants
     Data.Logic.Classes.Equals
     Data.Logic.Classes.FirstOrder
     Data.Logic.Classes.Formula
     Data.Logic.Classes.Literal
     Data.Logic.Classes.Negate
     Data.Logic.Classes.Pretty
     Data.Logic.Classes.Propositional
     Data.Logic.Classes.Skolem
     Data.Logic.Classes.Term
     Data.Logic.Classes.Variable
     Data.Logic.Failing
     Data.Logic.Harrison.DefCNF
     Data.Logic.Harrison.DP
     Data.Logic.Harrison.Equal
     Data.Logic.Harrison.FOL
     Data.Logic.Harrison.Formulas.FirstOrder
     Data.Logic.Harrison.Formulas.Propositional
     Data.Logic.Harrison.Herbrand
     Data.Logic.Harrison.Lib
     Data.Logic.Harrison.Meson
     Data.Logic.Harrison.Normal
     Data.Logic.Harrison.Prolog
     Data.Logic.Harrison.Prop
     Data.Logic.Harrison.PropExamples
     Data.Logic.Harrison.Resolution
     Data.Logic.Harrison.Skolem
     Data.Logic.Harrison.Tableaux
     Data.Logic.Harrison.Unif
     Data.Logic.Instances.Chiou
     Data.Logic.Instances.PropLogic
     Data.Logic.Instances.SatSolver
     Data.Logic.Instances.Test
     -- Data.Logic.Instances.TPTP
     Data.Logic.KnowledgeBase
     Data.Logic.Normal.Clause
     Data.Logic.Normal.Implicative
     Data.Logic.Resolution
     Data.Logic.Satisfiable
     Data.Logic.Types.Common
     Data.Logic.Types.FirstOrder
     Data.Logic.Types.FirstOrderPublic
     Data.Logic.Types.Harrison.Equal
     Data.Logic.Types.Harrison.FOL
     Data.Logic.Types.Harrison.Formulas.FirstOrder
     Data.Logic.Types.Harrison.Formulas.Propositional
     Data.Logic.Types.Harrison.Prop
     Data.Logic.Types.Propositional
     Data.Boolean
     Data.Boolean.SatSolver
 else
   Build-Depends: logic-classes

Executable geni-client
 -- Hs-Source-Dirs: src, ../logic-classes
 Main-Is: src/GenIClient.hs
 GHC-Options: -threaded -O2 -rtsopts
 Build-Depends:
  base,
  bytestring,
  containers,
  happstack-authenticate,
  happstack-scaffolding,
  http-conduit,
  ixset,
  json,
  mtl,
  pretty,
  QuickCheck,
  safecopy,
  seereason-base,
  set-extra,
  syb,
  text,
  time,
  userid,
  utf8-string,
  web-routes,
  web-routes-th
 if !flag(local-logic-classes)
   Build-Depends: logic-classes

Test-Suite seereason-base-tests
 Default-Language: Haskell2010
 Type: exitcode-stdio-1.0
 -- Hs-Source-Dirs: src, ../logic-classes
 Main-Is: src/Test/Main.hs
 Build-Depends:
  base,
  containers,
  happstack-authenticate,
  HUnit,
  ixset,
  json,
  pretty,
  QuickCheck,
  safecopy,
  seereason-base,
  set-extra,
  syb,
  text,
  time,
  userid,
  web-routes-th
 if !flag(local-logic-classes)
  Build-Depends: logic-classes
